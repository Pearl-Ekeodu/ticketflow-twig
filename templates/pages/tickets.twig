{% extends 'layouts/base.twig' %}

{% block content %}
<main class="tickets-page">
    <!-- Decorative Circles for Tickets Page -->
    <div class="tickets-decorative-circle-1" aria-hidden="true"></div>
    <div class="tickets-decorative-circle-2" aria-hidden="true"></div>
    
    <div class="tickets-content-wrapper">
        <div class="tickets-header-section">
            <div class="container">
                <div class="tickets-header-content">
                    <div class="tickets-title-section">
                        <h1 class="tickets-title">Ticket Management</h1>
                        <p class="tickets-subtitle">Create, view, edit, and manage all your tickets</p>
                    </div>
                    <button class="btn btn-primary btn-lg" onclick="openModal('createTicketModal')">
                        + Create Ticket
                    </button>
                </div>
            </div>
        </div>

        <main class="tickets-main">
            <div class="container">

            <!-- Filter and Search -->
            <section class="filters-section" aria-label="Ticket filters and search">
                <div class="filters-row">
                    <div class="search-wrapper">
                        <input
                            type="text"
                            id="ticket-search"
                            placeholder="Search tickets..."
                            class="search-input"
                            aria-label="Search tickets"
                            oninput="filterTickets()"
                        />
                        <span class="search-icon" aria-hidden="true">üîç</span>
                    </div>
                    
                    <div class="filter-buttons">
                        <button
                            class="filter-button active"
                            data-status="all"
                            onclick="setStatusFilter('all')"
                            aria-label="Show all tickets"
                        >
                            All (<span id="count-all">{{ stats.total }}</span>)
                        </button>
                        <button
                            class="filter-button"
                            data-status="open"
                            onclick="setStatusFilter('open')"
                            aria-label="Show open tickets"
                        >
                            Open (<span id="count-open">{{ stats.open }}</span>)
                        </button>
                        <button
                            class="filter-button"
                            data-status="in_progress"
                            onclick="setStatusFilter('in_progress')"
                            aria-label="Show in progress tickets"
                        >
                            In Progress (<span id="count-in_progress">{{ stats.inProgress }}</span>)
                        </button>
                        <button
                            class="filter-button"
                            data-status="closed"
                            onclick="setStatusFilter('closed')"
                            aria-label="Show closed tickets"
                        >
                            Closed (<span id="count-closed">{{ stats.closed }}</span>)
                        </button>
                    </div>
                </div>
            </section>

            <!-- Tickets Grid -->
            <section class="tickets-grid-section">
                {% if tickets|length == 0 %}
                    <div class="empty-state">
                        <div class="empty-icon">üé´</div>
                        <h2 class="empty-title">No tickets yet</h2>
                        <p class="empty-description">
                            Get started by creating your first ticket
                        </p>
                        <button class="btn btn-primary" onclick="openModal('createTicketModal')">
                            Create Your First Ticket
                        </button>
                    </div>
                {% else %}
                    <div class="tickets-grid">
                        {% for ticket in tickets %}
                        <div class="ticket-card card-hoverable" data-status="{{ ticket.status }}" data-title="{{ ticket.title|lower }}" data-description="{{ (ticket.description ?? '')|lower }}">
                            <div class="ticket-header">
                                <h3 class="ticket-title">{{ ticket.title }}</h3>
                                <div class="ticket-badges">
                                    <span class="status-badge status-{{ ticket.status }}">
                                        {% if ticket.status == 'open' %}Open
                                        {% elseif ticket.status == 'in_progress' %}In Progress
                                        {% else %}Closed
                                        {% endif %}
                                    </span>
                                    {% if ticket.priority %}
                                        <span class="priority-badge priority-{{ ticket.priority }}">
                                            {{ ticket.priority|upper }}
                                        </span>
                                    {% endif %}
                                </div>
                            </div>

                            {% if ticket.description %}
                                <p class="ticket-description">
                                    {% if ticket.description|length > 150 %}
                                        {{ ticket.description|slice(0, 150) }}...
                                    {% else %}
                                        {{ ticket.description }}
                                    {% endif %}
                                </p>
                            {% endif %}

                            <div class="ticket-meta">
                                <span class="ticket-date">
                                    Created: {{ ticket.created_at_formatted }}
                                </span>
                                {% if ticket.updated_at != ticket.created_at %}
                                    <span class="ticket-date">
                                        Updated: {{ ticket.updated_at_formatted }}
                                    </span>
                                {% endif %}
                            </div>

                            <div class="ticket-actions">
                                <button 
                                    class="btn btn-secondary btn-sm"
                                    onclick="openEditModal({{ ticket.id }})"
                                >
                                    Edit
                                </button>
                                <button 
                                    class="btn btn-danger btn-sm"
                                    onclick="openDeleteModal({{ ticket.id }})"
                                >
                                    Delete
                                </button>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                {% endif %}
            </section>
            </div>
        </main>
    </div>

    <!-- Create Ticket Modal -->
    <div id="createTicketModal" class="modal-overlay" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div>
                    <h2 id="modal-title" class="modal-title">Create New Ticket</h2>
                </div>
                <button class="modal-close" onclick="closeModal(document.getElementById('createTicketModal'))" aria-label="Close modal" type="button">‚úï</button>
            </div>
            <div class="modal-body">
                <form method="POST" action="/tickets" class="modal-form" id="createTicketForm">
                    <div class="form-group">
                        <label for="create-title" class="form-label">Title *</label>
                        <input 
                            type="text" 
                            id="create-title" 
                            name="title" 
                            class="input" 
                            placeholder="Enter ticket title"
                            required
                        />
                        <span class="error-message" id="create-title-error"></span>
                    </div>

                    <div class="form-group">
                        <label for="create-description" class="form-label">Description</label>
                        <textarea 
                            id="create-description" 
                            name="description" 
                            class="input" 
                            rows="4"
                            placeholder="Enter ticket description (optional)"
                        ></textarea>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="create-status" class="form-label">Status *</label>
                            <select id="create-status" name="status" class="form-select" required>
                                <option value="open">Open</option>
                                <option value="in_progress">In Progress</option>
                                <option value="closed">Closed</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="create-priority" class="form-label">Priority</label>
                            <select id="create-priority" name="priority" class="form-select">
                                <option value="">Select priority (optional)</option>
                                <option value="low">Low</option>
                                <option value="medium">Medium</option>
                                <option value="high">High</option>
                            </select>
                        </div>
                    </div>

                    <div class="modal-actions">
                        <button type="button" class="btn btn-secondary" onclick="closeModal(document.getElementById('createTicketModal'))">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Create Ticket
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Ticket Modal -->
    <div id="editTicketModal" class="modal-overlay" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div>
                    <h2 id="edit-modal-title" class="modal-title">Edit Ticket</h2>
                </div>
                <button class="modal-close" onclick="closeModal(document.getElementById('editTicketModal'))" aria-label="Close modal" type="button">‚úï</button>
            </div>
            <div class="modal-body">
                <form method="POST" action="/tickets/update" class="modal-form" id="editTicketForm">
                    <input type="hidden" id="edit-ticket-id" name="ticket_id" />
                    <div class="form-group">
                        <label for="edit-title" class="form-label">Title *</label>
                        <input 
                            type="text" 
                            id="edit-title" 
                            name="title" 
                            class="input" 
                            placeholder="Enter ticket title"
                            required
                        />
                        <span class="error-message" id="edit-title-error"></span>
                    </div>

                    <div class="form-group">
                        <label for="edit-description" class="form-label">Description</label>
                        <textarea 
                            id="edit-description" 
                            name="description" 
                            class="input" 
                            rows="4"
                            placeholder="Enter ticket description (optional)"
                        ></textarea>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="edit-status" class="form-label">Status *</label>
                            <select id="edit-status" name="status" class="form-select" required>
                                <option value="open">Open</option>
                                <option value="in_progress">In Progress</option>
                                <option value="closed">Closed</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="edit-priority" class="form-label">Priority</label>
                            <select id="edit-priority" name="priority" class="form-select">
                                <option value="">Select priority (optional)</option>
                                <option value="low">Low</option>
                                <option value="medium">Medium</option>
                                <option value="high">High</option>
                            </select>
                        </div>
                    </div>

                    <div class="modal-actions">
                        <button type="button" class="btn btn-secondary" onclick="closeModal(document.getElementById('editTicketModal'))">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Update Ticket
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteTicketModal" class="modal-overlay" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div>
                    <h2 id="delete-modal-title" class="modal-title">Delete Ticket</h2>
                </div>
                <button class="modal-close" onclick="closeModal(document.getElementById('deleteTicketModal'))" aria-label="Close modal" type="button">‚úï</button>
            </div>
            <div class="modal-body">
                <div class="delete-modal-content">
                    <p>Are you sure you want to delete this ticket? This action cannot be undone.</p>
                    <div id="delete-ticket-preview" class="ticket-preview"></div>
                    
                    <div class="modal-actions">
                        <button type="button" class="btn btn-secondary" onclick="closeModal(document.getElementById('deleteTicketModal'))">
                            Cancel
                        </button>
                        <form method="POST" action="/tickets/delete" id="deleteTicketForm" style="display: inline;">
                            <input type="hidden" id="delete-ticket-id" name="ticket_id" />
                            <button type="submit" class="btn btn-danger">
                                Delete Ticket
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
{% endblock %}

{% block scripts %}
<script>
// Ticket data from server
const allTickets = {{ tickets|json_encode|raw }};
let currentStatusFilter = 'all';
let currentSearchQuery = '';

// Filter and search functionality
function filterTickets() {
    const searchInput = document.getElementById('ticket-search');
    currentSearchQuery = searchInput ? searchInput.value.toLowerCase() : '';
    applyFilters();
}

function setStatusFilter(status) {
    currentStatusFilter = status;
    
    // Update active button
    document.querySelectorAll('.filter-button').forEach(btn => {
        btn.classList.remove('active');
        if (btn.dataset.status === status) {
            btn.classList.add('active');
        }
    });
    
    applyFilters();
}

function applyFilters() {
    const ticketCards = document.querySelectorAll('.ticket-card');
    const ticketsGrid = document.querySelector('.tickets-grid');
    let visibleCount = 0;
    
    ticketCards.forEach(card => {
        const status = card.dataset.status;
        const title = card.dataset.title || '';
        const description = card.dataset.description || '';
        
        let visible = true;
        
        // Filter by status
        if (currentStatusFilter !== 'all' && status !== currentStatusFilter) {
            visible = false;
        }
        
        // Filter by search query
        if (visible && currentSearchQuery.trim()) {
            const matchesTitle = title.includes(currentSearchQuery);
            const matchesDescription = description.includes(currentSearchQuery);
            if (!matchesTitle && !matchesDescription) {
                visible = false;
            }
        }
        
        if (visible) {
            card.style.display = 'flex';
            visibleCount++;
        } else {
            card.style.display = 'none';
        }
    });
    
    // Show/hide empty state or tickets grid
    const emptyState = document.querySelector('.empty-state');
    
    if (visibleCount === 0 && allTickets.length > 0) {
        // There are tickets but none match the filters
        if (ticketsGrid) {
            ticketsGrid.style.display = 'none';
        }
        
        // Create or update empty state
        if (!emptyState || !emptyState.closest('.tickets-grid-section')) {
            const gridSection = document.querySelector('.tickets-grid-section');
            if (gridSection) {
                gridSection.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-icon">üé´</div>
                        <h2 class="empty-title">${currentSearchQuery ? 'No tickets found' : 'No tickets yet'}</h2>
                        <p class="empty-description">
                            ${currentSearchQuery ? 'Try adjusting your search terms or filters' : 'Get started by creating your first ticket'}
                        </p>
                        <button class="btn btn-primary" onclick="openModal('createTicketModal')">
                            ${currentSearchQuery ? 'Create Ticket' : 'Create Your First Ticket'}
                        </button>
                    </div>
                `;
            }
        } else {
            // Update existing empty state
            const emptyTitle = emptyState.querySelector('.empty-title');
            const emptyDescription = emptyState.querySelector('.empty-description');
            const emptyButton = emptyState.querySelector('button');
            
            if (emptyTitle) {
                emptyTitle.textContent = currentSearchQuery ? 'No tickets found' : 'No tickets yet';
            }
            if (emptyDescription) {
                emptyDescription.textContent = currentSearchQuery 
                    ? 'Try adjusting your search terms or filters' 
                    : 'Get started by creating your first ticket';
            }
            if (emptyButton) {
                emptyButton.textContent = currentSearchQuery ? 'Create Ticket' : 'Create Your First Ticket';
            }
        }
    } else if (visibleCount > 0) {
        // Show tickets grid
        if (ticketsGrid) {
            ticketsGrid.style.display = 'grid';
        }
        
        // Remove any dynamically created empty state
        if (emptyState && emptyState.closest('.tickets-grid-section')) {
            emptyState.remove();
        }
    }
}

// Edit modal functions
function openEditModal(ticketId) {
    const ticket = allTickets.find(t => t.id == ticketId);
    if (!ticket) return;
    
    document.getElementById('edit-ticket-id').value = ticket.id;
    document.getElementById('edit-title').value = ticket.title;
    document.getElementById('edit-description').value = ticket.description || '';
    document.getElementById('edit-status').value = ticket.status;
    document.getElementById('edit-priority').value = ticket.priority || '';
    
    openModal('editTicketModal');
}

// Delete modal functions
function openDeleteModal(ticketId) {
    const ticket = allTickets.find(t => t.id == ticketId);
    if (!ticket) return;
    
    document.getElementById('delete-ticket-id').value = ticket.id;
    
    const preview = document.getElementById('delete-ticket-preview');
    if (preview) {
        const desc = ticket.description || '';
        const shortDesc = desc.length > 100 ? desc.substring(0, 100) + '...' : desc;
        
        preview.innerHTML = `
            <h4>${escapeHtml(ticket.title)}</h4>
            ${desc ? `<p>${escapeHtml(shortDesc)}</p>` : ''}
            <div class="ticket-preview-meta">
                <span class="status-badge status-${ticket.status}">
                    ${ticket.status === 'open' ? 'Open' : ticket.status === 'in_progress' ? 'In Progress' : 'Closed'}
                </span>
                ${ticket.priority ? `<span class="priority-badge priority-${ticket.priority}">${ticket.priority.toUpperCase()}</span>` : ''}
            </div>
        `;
    }
    
    openModal('deleteTicketModal');
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    // Set up search input
    const searchInput = document.getElementById('ticket-search');
    if (searchInput) {
        let debounceTimer;
        searchInput.addEventListener('input', function() {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(filterTickets, 300);
        });
    }
    
    // Initialize filter counts
    updateFilterCounts();
    
    // Only apply filters if we have tickets (server-side already handles empty state)
    if (allTickets.length > 0) {
        applyFilters();
    }
});

function updateFilterCounts() {
    const counts = {
        all: allTickets.length,
        open: allTickets.filter(t => t.status === 'open').length,
        in_progress: allTickets.filter(t => t.status === 'in_progress').length,
        closed: allTickets.filter(t => t.status === 'closed').length
    };
    
    const countAll = document.getElementById('count-all');
    const countOpen = document.getElementById('count-open');
    const countInProgress = document.getElementById('count-in_progress');
    const countClosed = document.getElementById('count-closed');
    
    if (countAll) countAll.textContent = counts.all;
    if (countOpen) countOpen.textContent = counts.open;
    if (countInProgress) countInProgress.textContent = counts.in_progress;
    if (countClosed) countClosed.textContent = counts.closed;
}
</script>
{% endblock %}

